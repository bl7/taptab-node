# üéØ Simple Promotions System - Frontend Integration Guide

## üìã Overview
The new simple promotions system replaces the complex old system with basic restaurant promotion types:
- **Happy Hour**: Time-based percentage discounts
- **BOGO**: Buy X Get Y Free deals
- **Percentage Off**: Category or product-specific percentage discounts
- **Fixed Amount Off**: Fixed dollar amount discounts

## üöÄ API Endpoints

### Base URL
```
/api/v1/simple-promotions
```

### 1. Create Promotion
**POST** `/api/v1/simple-promotions`

**Required Fields:**
- `name` (string): Promotion name
- `type` (string): One of `HAPPY_HOUR`, `BOGO`, `PERCENTAGE_OFF`, `FIXED_OFF`
- `discount_value` (number): Discount percentage or fixed amount

**Optional Fields:**
- `description` (string): Promotion description
- `min_order_amount` (number): Minimum order amount required
- `max_discount_amount` (number): Maximum discount cap (for percentage)
- `priority` (number): Higher number = higher priority
- `startDate` (string): Start date (YYYY-MM-DD)
- `endDate` (string): End date (YYYY-MM-DD)

**BOGO-Specific Fields:**
- `buy_quantity` (number): How many items customer must buy
- `get_quantity` (number): How many items customer gets free
- `buy_target_type` (string): `ALL`, `CATEGORY`, or `PRODUCTS` for buy items
- `buy_target_category_id` (string): Category ID for buy items (if buy_target_type is CATEGORY)
- `buy_target_product_ids` (array): Array of product IDs for buy items (if buy_target_type is PRODUCTS)
- `get_target_type` (string): `ALL`, `CATEGORY`, or `PRODUCTS` for free items
- `get_target_category_id` (string): Category ID for free items (if get_target_type is CATEGORY)
- `get_target_product_ids` (array): Array of product IDs for free items (if get_target_type is PRODUCTS)

**Happy Hour Specific Fields:**
- `start_time` (string): Start time (HH:MM)
- `end_time` (string): End time (HH:MM)
- `days_of_week` (array): Days when active [1,2,3,4,5,6,7] (Mon-Sun)

**Other Promotion Types:**
- `target_type` (string): `ALL`, `CATEGORY`, or `PRODUCTS`
- `target_category_id` (string): Category ID for category-specific promotions
- `target_product_ids` (array): Array of product IDs for product-specific promotions

**Example BOGO Request:**
```json
{
  "name": "Buy 2 Pizzas Get 1 Free",
  "type": "BOGO",
  "buy_quantity": 2,
  "get_quantity": 1,
  "buy_target_type": "CATEGORY",
  "buy_target_category_id": "cat_pizza",
  "get_target_type": "CATEGORY",
  "get_target_category_id": "cat_pizza"
}
```

**Example Mixed BOGO Request:**
```json
{
  "name": "Buy 2 Main Courses Get 1 Dessert Free",
  "type": "BOGO",
  "buy_quantity": 2,
  "get_quantity": 1,
  "buy_target_type": "CATEGORY",
  "buy_target_category_id": "cat_main_courses",
  "get_target_type": "CATEGORY",
  "get_target_category_id": "cat_desserts"
}
```

**Example Happy Hour Request:**
```json
{
  "name": "Happy Hour 20% Off Drinks",
  "type": "HAPPY_HOUR",
  "discount_value": 20.0,
  "start_time": "17:00",
  "end_time": "19:00",
  "days_of_week": [1, 2, 3, 4, 5],
  "target_type": "CATEGORY",
  "target_category_id": "cat_drinks"
}
```

**Example Percentage Off Request:**
```json
{
  "name": "15% Off All Appetizers",
  "type": "PERCENTAGE_OFF",
  "discount_value": 15.0,
  "target_type": "CATEGORY",
  "target_category_id": "cat_appetizers"
}
```

**Example Fixed Amount Off Request:**
```json
{
  "name": "$5 Off Orders Over $25",
  "type": "FIXED_OFF",
  "discount_value": 5.0,
  "min_order_amount": 25.0,
  "target_type": "ALL"
}
```

### 2. Get All Promotions
**GET** `/api/v1/simple-promotions`

**Query Parameters:**
- `active` (boolean): Filter by active status (optional)

**Response:**
```json
{
  "success": true,
  "data": {
    "promotions": [
      {
        "id": "promo_001",
        "name": "Happy Hour 20% Off",
        "description": "20% off all drinks during happy hour",
        "type": "HAPPY_HOUR",
        "discount_value": "20.00",
        "min_order_amount": "0.00",
        "max_discount_amount": null,
        "buy_quantity": 1,
        "get_quantity": 1,
        "start_time": "17:00:00",
        "end_time": "19:00:00",
        "days_of_week": [1, 2, 3, 4, 5],
        "target_type": "ALL",
        "target_category_id": null,
        "target_product_ids": null,
        "tenantId": "tenant_123",
        "isActive": true,
        "priority": 1,
        "startDate": null,
        "endDate": null,
        "createdAt": "2024-01-15T10:00:00.000Z",
        "updatedAt": "2024-01-15T10:00:00.000Z"
      }
    ]
  }
}
```

### 3. Get Single Promotion
**GET** `/api/v1/simple-promotions/:id`

**Response:** Single promotion object

### 4. Update Promotion
**PUT** `/api/v1/simple-promotions/:id`

**Request Body:** Same fields as create, but all optional

**Example:**
```json
{
  "isActive": false,
  "endDate": "2024-12-31"
}
```

### 5. Delete Promotion
**DELETE** `/api/v1/simple-promotions/:id`

### 6. Calculate Promotions for Order
**POST** `/api/v1/simple-promotions/calculate`

**Required Fields:**
- `orderItems` (array): Array of order items

**Order Item Structure:**
```json
{
  "menuItemId": "item_123",
  "name": "Margherita Pizza",
  "unitPrice": 15.99,
  "quantity": 2,
  "categoryId": "cat_456"
}
```

**Response:**
```json
{
  "success": true,
  "data": {
    "promotions": [
      {
        "id": "promo_001",
        "name": "Happy Hour 20% Off",
        "discountAmount": 6.40,
        "type": "HAPPY_HOUR",
        "appliedItems": ["item_123"]
      }
    ],
    "orderSummary": {
      "subtotal": 31.98,
      "totalDiscount": 6.40,
      "finalAmount": 25.58
    }
  }
}
```

### 7. Get Active Promotions
**GET** `/api/v1/simple-promotions/active`

**Response:** Array of currently active promotions

### 8. Get Public Active Promotions (No Auth Required)
**GET** `/api/v1/simple-promotions/public/active`

**Query Parameters:**
- `tenantId` (string): Required - Tenant ID to get promotions for

**Response:** Same as GET /active but no authentication required

**Use Case:** Customer-facing pages, public menus, landing pages

### 9. Calculate Public Promotions (No Auth Required)
**POST** `/api/v1/simple-promotions/public/calculate`

**Required Fields:**
- `orderItems` (array): Array of order items
- `tenantId` (string): Tenant ID for the restaurant

**Optional Fields:**
- `orderTime` (string): Order time for time-based promotions (ISO format)

**Order Item Structure:**
```json
{
  "menuItemId": "item_123",
  "name": "Margherita Pizza",
  "unitPrice": 15.99,
  "quantity": 2,
  "categoryId": "cat_456"
}
```

**Response:** Same as POST /calculate but no authentication required

**Use Case:** Public order preview, customer cart calculation before login

## üîê Authentication & Permissions

### Required Roles:
- **Full Access** (CRUD): `MANAGER`, `TENANT_ADMIN`
- **View & Calculate**: `WAITER`, `CASHIER`, `KITCHEN`

### Headers:
```
Authorization: Bearer {jwt_token}
Content-Type: application/json
```

## üìä Data Structure Details

### Promotion Types & Required Fields:

#### HAPPY_HOUR
- **Required**: `name`, `type`, `discount_value`, `start_time`, `end_time`
- **Optional**: `days_of_week`, `target_type`, `priority`, `startDate`, `endDate`

#### BOGO
- **Required**: `name`, `type`, `buy_quantity`, `get_quantity`
- **Optional**: `target_type`, `target_category_id`, `target_product_ids`, `priority`

#### PERCENTAGE_OFF
- **Required**: `name`, `type`, `discount_value`
- **Optional**: `max_discount_amount`, `target_type`, `target_category_id`, `target_product_ids`, `priority`

#### FIXED_OFF
- **Required**: `name`, `type`, `discount_value`
- **Optional**: `target_type`, `target_category_id`, `target_product_ids`, `priority`

### Field Descriptions:

- **discount_value**: For percentage (e.g., 20.0 = 20%), for fixed amount (e.g., 5.00 = $5.00)
- **days_of_week**: Array of integers where 1=Monday, 2=Tuesday, ..., 7=Sunday
- **target_type**: 
  - `ALL`: Applies to entire order
  - `CATEGORY`: Applies to specific category (requires `target_category_id`)
  - `PRODUCTS`: Applies to specific products (requires `target_product_ids`)
- **priority**: Higher numbers are applied first when multiple promotions match

## üéØ Promotion Examples

### Happy Hour Example:
```json
{
  "name": "Happy Hour 20% Off",
  "type": "HAPPY_HOUR",
  "discount_value": 20.0,
  "start_time": "17:00",
  "end_time": "19:00",
  "days_of_week": [1, 2, 3, 4, 5],
  "target_type": "ALL"
}
```

### BOGO Example:
```json
{
  "name": "Buy 2 Get 1 Free Pizza",
  "type": "BOGO",
  "buy_quantity": 2,
  "get_quantity": 1,
  "target_type": "CATEGORY",
  "target_category_id": "cat_pizza"
}
```

### Percentage Off Example:
```json
{
  "name": "10% Off Appetizers",
  "type": "PERCENTAGE_OFF",
  "discount_value": 10.0,
  "target_type": "CATEGORY",
  "target_category_id": "cat_appetizers",
  "max_discount_amount": 5.00
}
```

### Fixed Amount Off Example:
```json
{
  "name": "$2 Off Burgers",
  "type": "FIXED_OFF",
  "discount_value": 2.00,
  "target_type": "PRODUCTS",
  "target_product_ids": ["item_burger1", "item_burger2"]
}
```

## üéØ Promotion Types & How They Work

### **BOGO (Buy X Get Y Free)**
The most flexible promotion type that allows you to specify exactly which items customers must buy and which they get for free.

**Targeting Fields:**
- **Buy Items**: `buy_target_type`, `buy_target_category_id`, `buy_target_product_ids`
- **Get Items**: `get_target_type`, `get_target_category_id`, `get_target_product_ids`

**How It Works:**
1. **Buy Items**: Items customer must purchase to qualify
2. **Get Items**: Items customer gets for free
3. **Quantities**: How many to buy vs. how many free

**Examples:**

**Same Category BOGO:**
- **Buy**: 2 Pizzas from Pizza category
- **Get**: 1 Pizza free from Pizza category
- **Result**: Customer buys 2 pizzas, gets 1 pizza free

**Mixed Category BOGO:**
- **Buy**: 2 Main Courses from Main Courses category  
- **Get**: 1 Dessert free from Desserts category
- **Result**: Customer buys 2 main courses, gets 1 dessert free

**Product-Specific BOGO:**
- **Buy**: 2 Margherita Pizzas (specific product)
- **Get**: 1 Pepperoni Pizza free (specific product)
- **Result**: Customer buys 2 Margherita, gets 1 Pepperoni free

**All Items BOGO:**
- **Buy**: 3 items from entire menu
- **Get**: 1 item free from entire menu
- **Result**: Customer buys any 3 items, gets any 1 item free

### **Happy Hour**
Time-based percentage discounts on specific items or categories.

**Targeting Fields:**
- **Items**: `target_type`, `target_category_id`, `target_product_ids`
- **Time**: `start_time`, `end_time`, `days_of_week`

**Examples:**
- **All Drinks**: 20% off all beverages from 5-7 PM
- **Pizza Category**: 15% off all pizzas from 6-8 PM on weekdays
- **Specific Products**: 25% off selected cocktails from 4-6 PM

### **Percentage Off**
Fixed percentage discount on specific items, categories, or entire orders.

**Targeting Fields:**
- **Items**: `target_type`, `target_category_id`, `target_product_ids`

**Examples:**
- **All Items**: 10% off entire order
- **Category**: 15% off all appetizers
- **Products**: 20% off specific menu items

### **Fixed Amount Off**
Fixed dollar amount discount on specific items, categories, or entire orders.

**Targeting Fields:**
- **Items**: `target_type`, `target_category_id`, `target_product_ids`

**Examples:**
- **All Items**: $5 off orders over $25
- **Category**: $3 off all desserts
- **Products**: $2 off specific drinks

## üö® Error Responses

### Validation Error:
```json
{
  "success": false,
  "error": "VALIDATION_ERROR",
  "message": "Name, type, and discount_value are required"
}
```

### Not Found:
```json
{
  "success": false,
  "error": "NOT_FOUND",
  "message": "Promotion not found"
}
```

### Forbidden:
```json
{
  "success": false,
  "error": "FORBIDDEN",
  "message": "Access denied"
}
```

## üì± Integration Notes

### Public vs Authenticated Routes:
- **Public Routes**: Use `/public/*` endpoints for customer-facing pages
- **Authenticated Routes**: Use regular endpoints for staff/admin operations

### Public Page Flow:
1. **Landing Page**: Call `/public/active` to show current promotions
2. **Menu Display**: Show promotion badges on qualifying items
3. **Cart Preview**: Use `/public/calculate` to show discounts before login
4. **Order Confirmation**: Use authenticated `/calculate` after user logs in

### Staff/Admin Flow:
1. **Management**: Use CRUD endpoints to create/edit promotions
2. **Order Processing**: Use authenticated `/calculate` for final orders
3. **Monitoring**: View active promotions and usage

### Time Handling:
- Times are in 24-hour format (HH:MM)
- Dates are in ISO format (YYYY-MM-DD)
- Days are integers 1-7 (Monday-Sunday)
- System automatically checks current time/date when calculating promotions

---

**üéØ The simple promotions system is now ready and much simpler than the previous complex version. It handles the most common restaurant promotion needs without unnecessary complexity.**