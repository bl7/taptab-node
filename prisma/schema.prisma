// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  TENANT_ADMIN
  MANAGER
  CASHIER
  WAITER
  KITCHEN
  READONLY
}

model Tenant {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  logo        String?
  colors      Json?
  address     String?
  phone       String?
  email       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  categories  Category[]
  menuItems   MenuItem[]
  orders      Order[]
  auditLogs   AuditLog[]

  @@map("tenants")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  sortOrder Int      @default(0)
  isActive  Boolean  @default(true)
  tenantId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  tenant    Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  menuItems MenuItem[]

  @@map("categories")
}

model MenuItem {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  sortOrder   Int      @default(0)
  image       String?
  isActive    Boolean  @default(true)
  categoryId  String
  tenantId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  category   Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  tenant     Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@map("menuItems")
}

model Order {
  id               String   @id @default(cuid())
  orderNumber      String   @unique
  status           String   @default("pending")
  totalAmount      Decimal  @db.Decimal(10, 2)
  taxAmount        Decimal  @db.Decimal(10, 2) @default(0)
  discountAmount   Decimal  @db.Decimal(10, 2) @default(0)
  finalAmount      Decimal  @db.Decimal(10, 2)
  tableNumber      String?
  customerName     String?
  customerPhone    String?
  notes            String?
  isDelivery       Boolean  @default(false)
  deliveryAddress  String?
  deliveryPlatform String?
  deliveryOrderId  String?
  tenantId         String
  createdById      String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  tenant      Tenant      @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  orderItems  OrderItem[]

  @@map("orders")
}

model OrderItem {
  id         String   @id @default(cuid())
  quantity   Int
  unitPrice  Decimal  @db.Decimal(10, 2)
  totalPrice Decimal  @db.Decimal(10, 2)
  notes      String?
  orderId    String
  menuItemId String
  createdAt  DateTime @default(now())

  // Relations
  order    Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItem MenuItem @relation(fields: [menuItemId], references: [id])

  @@map("orderItems")
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  tableName String
  recordId  String
  oldValues Json?
  newValues Json?
  tenantId  String
  userId    String?
  createdAt DateTime @default(now())

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@map("auditLogs")
} 